/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.Administrador.paneles;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import modelo.entity.Empleado;
import modelo.entity.Roles;

/**
 * @author FranDev
 */
public class PanelEmpleadoAdm extends javax.swing.JPanel {

    public DefaultTableModel modTablaEmpleados = new DefaultTableModel();

    /**
     * Creates new form PanelHabitacionesAdm
     */
    public PanelEmpleadoAdm() {
        initComponents();
        String cabeTableProduc[] = {"ID", "NOMBRE", "APELLIDO", "DNI", "CORREO", "TELEFONO", "CARGO", "ESTADO"};

        modTablaEmpleados.setColumnIdentifiers(cabeTableProduc);

        tablaEmpleados.setModel(modTablaEmpleados);

        tablaEmpleados.setBackground(Color.BLACK);
        tablaEmpleados.setForeground(Color.WHITE);

        Panel_RegistroEmpleados.setVisible(false);
        Panel_EditEmpleados.setVisible(false);
        busquedaDinamica();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_RegistroEmpleados = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreEm = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnAceptarGuardarEm = new javax.swing.JButton();
        btnCancelarEm = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cboxRoles = new javax.swing.JComboBox<>();
        txtApellidoEm = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnBuscarReniecEm = new javax.swing.JButton();
        txtDniEm = new javax.swing.JTextField();
        txtPasswordEm = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTelefonoEm = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtCorreoEm = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtDireccionEm = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Panel_EditEmpleados = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDniEditEm = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNombreEditEm = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtApellidoEditEm = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtPasswordEditEm = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtTelefonoEditEm = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtCorreoEditEm = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtDireccionEditEm = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cboxEstadoEditEm = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cboxRolesEditEm = new javax.swing.JComboBox<>();
        btnAceptarEditarEm = new javax.swing.JButton();
        btnCancelarEditEm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jpanelContenidoEm = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        btnEditarEmpleado = new javax.swing.JButton();
        txtBuscarEmpleado = new javax.swing.JTextField();
        btnBuscarEmpleado = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel_RegistroEmpleados.setBackground(new java.awt.Color(255, 255, 255));
        Panel_RegistroEmpleados.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Panel_RegistroEmpleados.setForeground(new java.awt.Color(0, 0, 0));
        Panel_RegistroEmpleados.setEnabled(false);
        Panel_RegistroEmpleados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, 20));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Nombre");
        Panel_RegistroEmpleados.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 70, 20));

        txtNombreEm.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNombreEm.setForeground(new java.awt.Color(0, 0, 0));
        txtNombreEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEmActionPerformed(evt);
            }
        });
        txtNombreEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtNombreEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 160, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Puesto");
        Panel_RegistroEmpleados.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 70, 20));

        btnAceptarGuardarEm.setBackground(new java.awt.Color(0, 255, 0));
        btnAceptarGuardarEm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAceptarGuardarEm.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptarGuardarEm.setText("ACEPTAR");
        btnAceptarGuardarEm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptarGuardarEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarGuardarEmActionPerformed(evt);
            }
        });
        Panel_RegistroEmpleados.add(btnAceptarGuardarEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 140, 30));

        btnCancelarEm.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelarEm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnCancelarEm.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarEm.setText("CANCELAR");
        btnCancelarEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEmActionPerformed(evt);
            }
        });
        Panel_RegistroEmpleados.add(btnCancelarEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 140, 30));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Apellido");
        Panel_RegistroEmpleados.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, 20));

        cboxRoles.setBackground(new java.awt.Color(255, 255, 255));
        cboxRoles.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxRoles.setForeground(new java.awt.Color(0, 0, 0));
        cboxRoles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cboxRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxRolesActionPerformed(evt);
            }
        });
        Panel_RegistroEmpleados.add(cboxRoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 160, -1));

        txtApellidoEm.setBackground(new java.awt.Color(255, 255, 255));
        txtApellidoEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtApellidoEm.setForeground(new java.awt.Color(0, 0, 0));
        txtApellidoEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoEmActionPerformed(evt);
            }
        });
        txtApellidoEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtApellidoEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 160, -1));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Contraseña");
        Panel_RegistroEmpleados.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 90, 20));

        btnBuscarReniecEm.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscarReniecEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBuscarReniecEm.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarReniecEm.setText("Buscar");
        btnBuscarReniecEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarReniecEmActionPerformed(evt);
            }
        });
        Panel_RegistroEmpleados.add(btnBuscarReniecEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, 25));

        txtDniEm.setBackground(new java.awt.Color(255, 255, 255));
        txtDniEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDniEm.setForeground(new java.awt.Color(0, 0, 0));
        txtDniEm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDniEmFocusGained(evt);
            }
        });
        txtDniEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniEmActionPerformed(evt);
            }
        });
        txtDniEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniEmKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtDniEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 140, 25));

        txtPasswordEm.setBackground(new java.awt.Color(255, 255, 255));
        txtPasswordEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPasswordEm.setForeground(new java.awt.Color(0, 0, 0));
        txtPasswordEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordEmActionPerformed(evt);
            }
        });
        txtPasswordEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtPasswordEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 160, -1));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Teléfono");
        Panel_RegistroEmpleados.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 70, 20));

        txtTelefonoEm.setBackground(new java.awt.Color(255, 255, 255));
        txtTelefonoEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelefonoEm.setForeground(new java.awt.Color(0, 0, 0));
        txtTelefonoEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoEmActionPerformed(evt);
            }
        });
        txtTelefonoEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtTelefonoEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 160, -1));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Correo Electrónico");
        Panel_RegistroEmpleados.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 140, 20));

        txtCorreoEm.setBackground(new java.awt.Color(255, 255, 255));
        txtCorreoEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCorreoEm.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreoEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoEmActionPerformed(evt);
            }
        });
        txtCorreoEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtCorreoEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 160, -1));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Dirección");
        Panel_RegistroEmpleados.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 80, 20));

        txtDireccionEm.setBackground(new java.awt.Color(255, 255, 255));
        txtDireccionEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDireccionEm.setForeground(new java.awt.Color(0, 0, 0));
        txtDireccionEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionEmActionPerformed(evt);
            }
        });
        txtDireccionEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionEmKeyTyped(evt);
            }
        });
        Panel_RegistroEmpleados.add(txtDireccionEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 350, -1));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Crear nuevo Empleado");
        Panel_RegistroEmpleados.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("INGRESE SU DNI");
        Panel_RegistroEmpleados.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, 20));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, 20));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, 20));

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, 20));

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, -1, 20));

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 0));
        jLabel29.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, 20));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 0, 0));
        jLabel30.setText("(*)");
        Panel_RegistroEmpleados.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, -1, 20));

        add(Panel_RegistroEmpleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 410, 450));

        Panel_EditEmpleados.setBackground(new java.awt.Color(255, 255, 255));
        Panel_EditEmpleados.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Panel_EditEmpleados.setForeground(new java.awt.Color(0, 0, 0));
        Panel_EditEmpleados.setEnabled(false);
        Panel_EditEmpleados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Editar Empleado");
        Panel_EditEmpleados.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText(" DNI ");
        Panel_EditEmpleados.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        txtDniEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtDniEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDniEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtDniEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniEditEmActionPerformed(evt);
            }
        });
        Panel_EditEmpleados.add(txtDniEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 140, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText(" Nombre");
        Panel_EditEmpleados.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 80, 20));

        txtNombreEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNombreEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtNombreEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEditEmActionPerformed(evt);
            }
        });
        txtNombreEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtNombreEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 160, -1));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Apellido");
        Panel_EditEmpleados.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));

        txtApellidoEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtApellidoEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtApellidoEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtApellidoEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoEditEmActionPerformed(evt);
            }
        });
        txtApellidoEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtApellidoEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 160, -1));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Contraseña");
        Panel_EditEmpleados.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, 90, 20));

        txtPasswordEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtPasswordEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPasswordEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtPasswordEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordEditEmActionPerformed(evt);
            }
        });
        txtPasswordEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtPasswordEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, 160, -1));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Teléfono");
        Panel_EditEmpleados.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 70, 20));

        txtTelefonoEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtTelefonoEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelefonoEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtTelefonoEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoEditEmActionPerformed(evt);
            }
        });
        txtTelefonoEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtTelefonoEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 160, -1));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Correo Electrónico");
        Panel_EditEmpleados.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 140, 20));

        txtCorreoEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtCorreoEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCorreoEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreoEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoEditEmActionPerformed(evt);
            }
        });
        txtCorreoEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtCorreoEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 160, -1));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Dirección");
        Panel_EditEmpleados.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 70, 20));

        txtDireccionEditEm.setBackground(new java.awt.Color(255, 255, 255));
        txtDireccionEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDireccionEditEm.setForeground(new java.awt.Color(0, 0, 0));
        txtDireccionEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionEditEmActionPerformed(evt);
            }
        });
        txtDireccionEditEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionEditEmKeyTyped(evt);
            }
        });
        Panel_EditEmpleados.add(txtDireccionEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 160, -1));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Estado");
        Panel_EditEmpleados.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 70, 20));

        cboxEstadoEditEm.setBackground(new java.awt.Color(255, 255, 255));
        cboxEstadoEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxEstadoEditEm.setForeground(new java.awt.Color(0, 0, 0));
        cboxEstadoEditEm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "ACTIVO", "INACTIVO" }));
        cboxEstadoEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxEstadoEditEmActionPerformed(evt);
            }
        });
        Panel_EditEmpleados.add(cboxEstadoEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 160, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Puesto");
        Panel_EditEmpleados.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 70, 20));

        cboxRolesEditEm.setBackground(new java.awt.Color(255, 255, 255));
        cboxRolesEditEm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxRolesEditEm.setForeground(new java.awt.Color(0, 0, 0));
        cboxRolesEditEm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "ADMIN", "RECEPCIONISTA" }));
        cboxRolesEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxRolesEditEmActionPerformed(evt);
            }
        });
        Panel_EditEmpleados.add(cboxRolesEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 160, -1));

        btnAceptarEditarEm.setBackground(new java.awt.Color(0, 255, 0));
        btnAceptarEditarEm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAceptarEditarEm.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptarEditarEm.setText("ACEPTAR");
        btnAceptarEditarEm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptarEditarEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarEditarEmActionPerformed(evt);
            }
        });
        Panel_EditEmpleados.add(btnAceptarEditarEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 140, 30));

        btnCancelarEditEm.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelarEditEm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnCancelarEditEm.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarEditEm.setText("CANCELAR");
        btnCancelarEditEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEditEmActionPerformed(evt);
            }
        });
        Panel_EditEmpleados.add(btnCancelarEditEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 140, 30));

        add(Panel_EditEmpleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 410, 450));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel1.setText("Gestión de Empleados");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 571, -1));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("+ Añadir Usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 100, -1, 48));

        jpanelContenidoEm.setBackground(new java.awt.Color(255, 255, 255));
        jpanelContenidoEm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jpanelContenidoEm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Lista de Empleados");
        jpanelContenidoEm.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 290, 48));
        jpanelContenidoEm.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 7, -1, -1));

        tablaEmpleados.setBackground(new java.awt.Color(180, 180, 180));
        tablaEmpleados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tablaEmpleados.setForeground(new java.awt.Color(0, 0, 0));
        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaEmpleados.setGridColor(new java.awt.Color(180, 180, 180));
        jScrollPane1.setViewportView(tablaEmpleados);

        jpanelContenidoEm.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 850, 220));

        btnEditarEmpleado.setBackground(new java.awt.Color(0, 0, 0));
        btnEditarEmpleado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnEditarEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        btnEditarEmpleado.setText("Editar");
        btnEditarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEmpleadoActionPerformed(evt);
            }
        });
        jpanelContenidoEm.add(btnEditarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 73, 86, 35));

        txtBuscarEmpleado.setBackground(new java.awt.Color(180, 180, 180));
        txtBuscarEmpleado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBuscarEmpleado.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscarEmpleado.setText("Buscar Empleado");
        txtBuscarEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarEmpleadoFocusLost(evt);
            }
        });
        txtBuscarEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarEmpleadoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtBuscarEmpleadoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtBuscarEmpleadoMousePressed(evt);
            }
        });
        txtBuscarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarEmpleadoActionPerformed(evt);
            }
        });
        jpanelContenidoEm.add(txtBuscarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 74, 276, 35));

        btnBuscarEmpleado.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscarEmpleado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBuscarEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarEmpleado.setText("Buscar");
        btnBuscarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEmpleadoActionPerformed(evt);
            }
        });
        jpanelContenidoEm.add(btnBuscarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 73, 86, 35));

        add(jpanelContenidoEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 930, 410));
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEmpleadoActionPerformed
        bloquearImputs();

        int fila = tablaEmpleados.getSelectedRow();

        if (fila == -1) {

            JOptionPane.showConfirmDialog(null, "SELECCIONA UNA FILA PARA CONTINUAR", "", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);

        } else {
            bloquear(jpanelContenidoEm);
            bloquearImputs();
            llenarFormEditar();
            bloquearTablaEmpleados();
            Panel_EditEmpleados.setVisible(true);
        }


    }//GEN-LAST:event_btnEditarEmpleadoActionPerformed

    private void btnBuscarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarEmpleadoActionPerformed

    private void txtNombreEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEmActionPerformed

    private void txtNombreEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEmKeyTyped

        // validarLetras(evt, txtNombre);
    }//GEN-LAST:event_txtNombreEmKeyTyped

    private void btnAceptarGuardarEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarGuardarEmActionPerformed

        //creamos una arreglo de tipos object
        //Object fila[] = new Object[7];
        // ArrayList<String> list = new ArrayList<>();
        //obtenemos los datos que agrega el usuario
        // String tDni = txtDni.getText();
        //String tNombre = txtNombre.getText();
        //String tApellido = txtApellido.getText();
        //  String puesto = (String) cboxPuesto.getSelectedItem();
        //  String tSalario = txtSalario.getText();
        //  String tTelefno = txtTelefono.getText();
        // list.add(tDni); //0
        // list.add(tNombre); //1
        // list.add(tApellido); //2
        //falta fecha de contratacion
        // list.add(puesto); //3
        //  list.add(tSalario);//4
        // list.add(tTelefno);//5
        //  administrador.registrarEmpleado(modTablaEmpleados, list);

        /*
        String tPuesto = String.valueOf(cboxPuesto.getSelectedItem());
        //
        Empleado empledo1 = new Mozo(tDni, tPuesto, 200, tNombre, tApellido, "", tTelefno, "");
        //        administrador.registrarEmpleado(empledo1);
        //"DNI","NOMBRE","APELLIDO","TELEFONO" ,"PUESTO","FECHA INGRESO","SALARIO"
        //agregamos cada ctenido al arreglo
        fila[0] = empledo1.getDni();
        fila[1] = empledo1.getNombre();
        fila[2] = empledo1.getApellido();
        fila[3] = empledo1.getCelular();
        fila[4] = empledo1.getPuesto();
        fila[5] = "200";
        fila[6] = empledo1.getSalario();
        //agregamos una fila  a la tabla con el contedio que tiene el arreglo
        modTablaEmpleados.addRow(fila);
         */
    }//GEN-LAST:event_btnAceptarGuardarEmActionPerformed

    private void btnCancelarEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEmActionPerformed

        desbloquear(jpanelContenidoEm);
        Panel_RegistroEmpleados.setVisible(false);
        desbloquearTablaEmpleados();
    }//GEN-LAST:event_btnCancelarEmActionPerformed

    private void cboxRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxRolesActionPerformed
        cboxRoles.getSelectedItem();
        if (cboxRoles.getSelectedIndex() == 1 || cboxRoles.getSelectedIndex() == 2 || cboxRoles.getSelectedIndex() == 3) {
            // txtSalario.setText("1200");

        } else if (cboxRoles.getSelectedIndex() == 4) {
            // txtSalario.setText("2000");
        }
    }//GEN-LAST:event_cboxRolesActionPerformed

    private void txtApellidoEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoEmActionPerformed

    private void txtApellidoEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoEmKeyTyped

        // validarNumTe(evt, txtTelefono);
    }//GEN-LAST:event_txtApellidoEmKeyTyped

    private void btnBuscarReniecEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarReniecEmActionPerformed
        /* txtDni.getText();
        String nombres = "";
        String apellidoMaterno = "";
        String apellido_paterno = "";
        try {
            String apiUrl = "https://apiperu.dev/api/dni";
            String token = "80023b3d4012da96b050f6d877907074c222c4de47da30a230a92448b46d2eb1";
            String dni = txtDni.getText();

            // Crear una URL
            URL url = new URL(apiUrl);

            // Abrir una conexión HTTP
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            // Establecer el método de solicitud como POST
            connection.setRequestMethod("POST");

            // Habilitar la escritura en la conexión
            connection.setDoOutput(true);

            // Establecer el tipo de contenido
            connection.setRequestProperty("Content-Type", "application/json");

            // Establecer el encabezado de autorización con el token
            connection.setRequestProperty("Authorization", "Bearer " + token);

            // Crear el cuerpo JSON de la solicitud
            String jsonInputString = "{\"dni\": \"" + dni + "\"}";

            // Escribir el cuerpo JSON en la conexión
            try (DataOutputStream os = new DataOutputStream(connection.getOutputStream())) {
                os.write(jsonInputString.getBytes("UTF-8"));
            }

            // Obtener la respuesta de la API
            int responseCode = connection.getResponseCode();

            // Leer la respuesta de la API
            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                JSONObject jsonResponse = new JSONObject(response.toString());
                JSONObject data = jsonResponse.getJSONObject("data");

                nombres = data.getString("nombres");
                apellidoMaterno = data.getString("apellido_materno");
                apellido_paterno = data.getString("apellido_paterno");
                // Imprimir el nombre y apellido materno
                System.out.println("Nombre: " + nombres);
                System.out.println("Apellido Materno: " + apellidoMaterno);
                System.out.println("Apellido Paterno: " + apellido_paterno);

            } else {
                System.out.println("Error en la solicitud, código de respuesta: " + responseCode);
            }

            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }

        txtNombre.setText(nombres);
        txtApellido.setText(apellido_paterno + " " + apellidoMaterno);
         */
    }//GEN-LAST:event_btnBuscarReniecEmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        desbloquearImputs();
        bloquear(jpanelContenidoEm);
        Panel_RegistroEmpleados.setVisible(true);
        bloquearTablaEmpleados();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPasswordEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordEmActionPerformed

    private void txtPasswordEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordEmKeyTyped

    private void txtDniEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniEmActionPerformed


    }//GEN-LAST:event_txtDniEmActionPerformed

    private void txtTelefonoEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoEmActionPerformed

    private void txtTelefonoEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoEmKeyTyped

    private void txtCorreoEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoEmActionPerformed

    private void txtCorreoEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoEmKeyTyped

    private void txtDireccionEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEmActionPerformed

    private void txtDireccionEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEmKeyTyped

    private void txtNombreEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEditEmActionPerformed

    private void txtNombreEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEditEmKeyTyped

    private void btnAceptarEditarEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarEditarEmActionPerformed

        

    }//GEN-LAST:event_btnAceptarEditarEmActionPerformed

    private void btnCancelarEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEditEmActionPerformed

        desbloquear(jpanelContenidoEm);
        Panel_EditEmpleados.setVisible(false);
        desbloquearTablaEmpleados();
    }//GEN-LAST:event_btnCancelarEditEmActionPerformed

    private void cboxRolesEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxRolesEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxRolesEditEmActionPerformed

    private void txtApellidoEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoEditEmActionPerformed

    private void txtApellidoEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoEditEmKeyTyped

    private void txtDniEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniEditEmActionPerformed

    private void txtPasswordEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordEditEmActionPerformed

    private void txtPasswordEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordEditEmKeyTyped

    private void txtTelefonoEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoEditEmActionPerformed

    private void txtTelefonoEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoEditEmKeyTyped

    private void txtCorreoEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoEditEmActionPerformed

    private void txtCorreoEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoEditEmKeyTyped

    private void txtDireccionEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEditEmActionPerformed

    private void txtDireccionEditEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionEditEmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEditEmKeyTyped

    private void cboxEstadoEditEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxEstadoEditEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxEstadoEditEmActionPerformed

    private void txtBuscarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarEmpleadoActionPerformed

    }//GEN-LAST:event_txtBuscarEmpleadoActionPerformed

    private void txtBuscarEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarEmpleadoMouseClicked
        if (txtBuscarEmpleado.getText().equals("Buscar Empleado")) {
            txtBuscarEmpleado.setText(""); // Limpia el texto al hacer clic si es el texto por defecto
        }
    }//GEN-LAST:event_txtBuscarEmpleadoMouseClicked

    private void txtBuscarEmpleadoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarEmpleadoMousePressed

    }//GEN-LAST:event_txtBuscarEmpleadoMousePressed

    private void txtBuscarEmpleadoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarEmpleadoMouseExited

    }//GEN-LAST:event_txtBuscarEmpleadoMouseExited

    private void txtBuscarEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarEmpleadoFocusLost
        if (txtBuscarEmpleado.getText().isEmpty()) {
            txtBuscarEmpleado.setText("Buscar Empleado"); // Restaura el texto si está vacío al perder el foco
        }
    }//GEN-LAST:event_txtBuscarEmpleadoFocusLost

    private void txtDniEmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDniEmFocusGained

    }//GEN-LAST:event_txtDniEmFocusGained

    private void txtDniEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniEmKeyTyped


    }//GEN-LAST:event_txtDniEmKeyTyped

    private void txtDniEmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniEmKeyReleased
        txtPasswordEm.setText(txtDniEm.getText());
    }//GEN-LAST:event_txtDniEmKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Panel_EditEmpleados;
    public javax.swing.JPanel Panel_RegistroEmpleados;
    public javax.swing.JButton btnAceptarEditarEm;
    public javax.swing.JButton btnAceptarGuardarEm;
    public javax.swing.JButton btnBuscarEmpleado;
    public javax.swing.JButton btnBuscarReniecEm;
    public javax.swing.JButton btnCancelarEditEm;
    public javax.swing.JButton btnCancelarEm;
    public javax.swing.JButton btnEditarEmpleado;
    public javax.swing.JComboBox<String> cboxEstadoEditEm;
    public javax.swing.JComboBox<String> cboxRoles;
    public javax.swing.JComboBox<String> cboxRolesEditEm;
    public javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel jpanelContenidoEm;
    public javax.swing.JTable tablaEmpleados;
    public javax.swing.JTextField txtApellidoEditEm;
    public javax.swing.JTextField txtApellidoEm;
    private javax.swing.JTextField txtBuscarEmpleado;
    public javax.swing.JTextField txtCorreoEditEm;
    public javax.swing.JTextField txtCorreoEm;
    public javax.swing.JTextField txtDireccionEditEm;
    public javax.swing.JTextField txtDireccionEm;
    public javax.swing.JTextField txtDniEditEm;
    public javax.swing.JTextField txtDniEm;
    public javax.swing.JTextField txtNombreEditEm;
    public javax.swing.JTextField txtNombreEm;
    public javax.swing.JTextField txtPasswordEditEm;
    public javax.swing.JTextField txtPasswordEm;
    public javax.swing.JTextField txtTelefonoEditEm;
    public javax.swing.JTextField txtTelefonoEm;
    // End of variables declaration//GEN-END:variables
    public void bloquear(Component component) {

        if (component instanceof Container) {
            Component[] components = ((Container) component).getComponents();
            for (Component child : components) {
                bloquear(child); // Llamada recursiva
            }
        }
        component.setEnabled(false);

    }

    public void desbloquear(Component component) {

        if (component instanceof Container) {
            Component[] components = ((Container) component).getComponents();
            for (Component child : components) {
                desbloquear(child); // Llamada recursiva
            }
        }
        component.setEnabled(true);

    }

    public Empleado getDatosEmpleado() {
        Empleado emVista = new Empleado();

        emVista.setDni(txtDniEm.getText());
        emVista.setNombre(txtNombreEm.getText());
        emVista.setApellido(txtApellidoEm.getText());
        emVista.setDireccion(txtDireccionEm.getText());
        emVista.setTelefono(txtTelefonoEm.getText());
        emVista.setCorreoElectronico(txtCorreoEm.getText());
        emVista.setPassword(txtPasswordEm.getText());

        List<Roles> assginedRoles = new ArrayList<>();
        Roles rol = new Roles();

        rol.setNombreRol((String) cboxRoles.getSelectedItem());

        assginedRoles.add(rol);

        emVista.setRoles(assginedRoles);

        return emVista;
    }

    public boolean validarCampos() {

        if (txtApellidoEm.getText().trim().isEmpty()
                || txtCorreoEm.getText().trim().isEmpty()
                || txtDireccionEm.getText().trim().isEmpty()
                || txtDniEm.getText().trim().isEmpty()
                || txtNombreEm.getText().trim().isEmpty()
                || txtPasswordEm.getText().trim().isEmpty()
                || txtTelefonoEm.getText().trim().isEmpty()) {

            return false;
        }

        return true;
    }

    public boolean validarDniEmpleado() {
        String dni = txtDniEm.getText().trim();

        // Verificar si está vacío
        if (dni.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un DNI", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Verificar si contiene solo números
        if (!dni.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "El DNI debe contener solo números", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Verificar si contiene solo números y tiene 8 dígitos
        if (!dni.matches("\\d{8}")) {
            JOptionPane.showMessageDialog(null, "El DNI o número de pasaporte debe contener exactamente 8 dígitos numéricos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    public boolean validarCamposSave() {
        if (txtApellidoEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtCorreoEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El Correo electronico es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Verificar que termine con "@gmail.com"
        if (!txtCorreoEm.getText().trim().endsWith("@gmail.com")) {
            JOptionPane.showMessageDialog(null, "El correo electrónico debe ser una dirección válida de @gmail.com", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtDireccionEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La direccion es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtDniEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El dni es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtNombreEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtPasswordEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La contraseña es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtTelefonoEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El telefono  es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // Verificar que contenga solo números y tenga exactamente 9 dígitos
        if (!txtTelefonoEm.getText().trim().matches("\\d{9}")) {
            JOptionPane.showMessageDialog(null, "El teléfono debe contener exactamente 9 dígitos numéricos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (!txtTelefonoEm.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "El teléfono debe contener solo números", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (cboxRoles.getSelectedIndex() == 0) { // Asumiendo que la primera opción es "SELECCIONAR"
            JOptionPane.showMessageDialog(null, "Debe seleccionar un rol", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;

    }

    public boolean validarCamposUpdate() {

        if (txtApellidoEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtCorreoEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El Correo electronico es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Verificar que termine con "@gmail.com"
        if (!txtCorreoEditEm.getText().trim().endsWith("@gmail.com")) {
            JOptionPane.showMessageDialog(null, "El correo electrónico debe ser una dirección válida de @gmail.com", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtDireccionEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La direccion es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtDniEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El dni es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtNombreEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtPasswordEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La contraseña es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtTelefonoEditEm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El telefono  es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // Verificar que contenga solo números y tenga exactamente 9 dígitos
        if (!txtTelefonoEditEm.getText().trim().matches("\\d{9}")) {
            JOptionPane.showMessageDialog(null, "El teléfono debe contener exactamente 9 dígitos numéricos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (!txtTelefonoEditEm.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "El teléfono debe contener solo números", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;

    }

    public void bloquearImputs() {

        txtDniEm.setEnabled(false);
        txtNombreEm.setEnabled(false);
        txtApellidoEm.setEnabled(false);
        // txtCorreoEm.
        // txtDireccionEm.
        // txtDniEm.
        // txtNombreEm.
        // txtPasswordEm.
        // txtTelefonoEm.

    }

    public void desbloquearImputs() {

        txtDniEm.setEnabled(true);
        txtNombreEm.setEnabled(true);
        txtApellidoEm.setEnabled(true);
        // txtCorreoEm.
        // txtDireccionEm.
        // txtDniEm.
        // txtNombreEm.
        // txtPasswordEm.
        // txtTelefonoEm.

    }

    public void llenarFormEditar() {

        int fila = tablaEmpleados.getSelectedRow();

        String nombre = String.valueOf(tablaEmpleados.getValueAt(fila, 1));
        String apellido = String.valueOf(tablaEmpleados.getValueAt(fila, 2));
        String dni = String.valueOf(tablaEmpleados.getValueAt(fila, 3));
        String correo = String.valueOf(tablaEmpleados.getValueAt(fila, 4));
        String telefono = String.valueOf(tablaEmpleados.getValueAt(fila, 5));
        String estado = String.valueOf(tablaEmpleados.getValueAt(fila, 6));

        txtDniEditEm.setText(dni);
        //txtNombreEditEm.setText(nombre);
        // txtApellidoEditEm.setText(apellido);
        /// txtTelefonoEditEm.setText(telefono);
        // txtDireccionEditEm.setText("SN");
        // txtCorreoEditEm.setText(correo);

        //   txtPasswordEm.setText(datos.getDni());
        //  txtTelefonoEm.setText(datos.getDni());
    }

    public String extraerDni() {

        int fila = tablaEmpleados.getSelectedRow(); // Obtiene la fila seleccionada

        if (fila == -1) { // Verifica si no hay fila seleccionada
            
            return null;
        }

        try {
            int modeloFila = tablaEmpleados.convertRowIndexToModel(fila); // Convierte el índice de vista al modelo
            String dni = String.valueOf(tablaEmpleados.getModel().getValueAt(modeloFila, 3)); // Obtiene el valor del modelo
            return dni;
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Error al obtener el DNI. Verifique la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Opcional: Para depuración
            return null;
        }
    }

    public void limpiarCamposEdit() {

        txtDniEditEm.setText("");
        txtNombreEditEm.setText("");
        txtApellidoEditEm.setText("");
        txtTelefonoEditEm.setText("");
        txtDireccionEditEm.setText("");
        txtCorreoEditEm.setText("");
        txtPasswordEditEm.setText("");
    }

    public void limpiarCamposRegistrar() {

        txtDniEm.setText("");
        txtNombreEm.setText("");
        txtApellidoEm.setText("");
        txtDireccionEm.setText("");
        txtTelefonoEm.setText("");
        txtCorreoEm.setText("");
        txtPasswordEm.setText("");

    }

    public Empleado getDatosEmpleadoEdit() {

        Empleado emEditVista = new Empleado();

        emEditVista.setDni(txtDniEditEm.getText());
        emEditVista.setNombre(txtNombreEditEm.getText());
        emEditVista.setApellido(txtApellidoEditEm.getText());
        emEditVista.setTelefono(txtTelefonoEditEm.getText());
        emEditVista.setDireccion(txtDireccionEditEm.getText());
        emEditVista.setCorreoElectronico(txtCorreoEditEm.getText());
        emEditVista.setPassword(txtPasswordEditEm.getText());

        List<Roles> assginedRoles = new ArrayList<>();
        Roles rol = new Roles();

        rol.setNombreRol((String) cboxRolesEditEm.getSelectedItem());

        assginedRoles.add(rol);

        emEditVista.setRoles(assginedRoles);
        emEditVista.setEstado((String) cboxEstadoEditEm.getSelectedItem());

        return emEditVista;
    }

    public void busquedaDinamica() {
        // Crear un TableRowSorter para el modelo de la tabla
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modTablaEmpleados);
        tablaEmpleados.setRowSorter(sorter);

        // Añadir un KeyListener al campo de búsqueda
        txtBuscarEmpleado.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String textoBusqueda = txtBuscarEmpleado.getText().trim();

                // Si el campo de búsqueda está vacío, mostrar todas las filas
                if (textoBusqueda.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    // Aplicar un filtro en la tabla según el texto ingresado
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
                }
            }
        });

    }

    public void bloquearTablaEmpleados() {
        // Obtener el JScrollPane que contiene la tabla
        JScrollPane scrollPane = (JScrollPane) tablaEmpleados.getParent().getParent();

        // Deshabilitar el desplazamiento
        scrollPane.setWheelScrollingEnabled(false); // Deshabilita el scroll con el ratón
        scrollPane.getVerticalScrollBar().setEnabled(false); // Deshabilita la barra de desplazamiento vertical
        scrollPane.getHorizontalScrollBar().setEnabled(false); // Deshabilita la barra de desplazamiento horizontal

        // También, puedes deshabilitar la tabla completamente, para evitar que interactúen con la misma
        tablaEmpleados.setEnabled(false); // Deshabilita la interacción con la tabla

    }

    public void desbloquearTablaEmpleados() {
        // Obtener el JScrollPane que contiene la tabla
        JScrollPane scrollPane = (JScrollPane) tablaEmpleados.getParent().getParent();

        // Deshabilitar el desplazamiento
        scrollPane.setWheelScrollingEnabled(true); // Deshabilita el scroll con el ratón
        scrollPane.getVerticalScrollBar().setEnabled(true); // Deshabilita la barra de desplazamiento vertical
        scrollPane.getHorizontalScrollBar().setEnabled(true); // Deshabilita la barra de desplazamiento horizontal

        // También, puedes deshabilitar la tabla completamente, para evitar que interactúen con la misma
        tablaEmpleados.setEnabled(true); // Deshabilita la interacción con la tabla

    }

    public boolean validarSelectEstadoEmpleado() {

        if (cboxEstadoEditEm.getSelectedIndex() == 0) { // Asumiendo que la primera opción es "SELECCIONAR"

            return false;
        }

        return true;
    }

    public boolean validarSelectPuesto() {

        if (cboxRolesEditEm.getSelectedIndex() == 0) { // Asumiendo que la primera opción es "SELECCIONAR"

            return false;
        }

        return true;
    }

}
