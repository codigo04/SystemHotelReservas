/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.Empleado.paneles;

import aggregates.Servicios.pdf.PdfService;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.entity.Cliente;
import modelo.entity.Habitacion;
import modelo.entity.Reserva;
import modelo.entity.Servicio;
import modelo.entity.Ticket;

/**
 *
 * @author FranDev
 */
public class PanelRecervarHabitaciones extends javax.swing.JPanel {

    /**
     * Creates new form PanelHabitaciones
     */
    public DefaultTableModel modTablaHabitacionesRecervas = new DefaultTableModel();
    public DefaultTableModel modTablaServicios = new DefaultTableModel();

    public DefaultTableModel modTablaServiciosElegido = new DefaultTableModel();

    public PanelRecervarHabitaciones() {
        initComponents();

        String cabeTableHabitaciones[] = {"ID", "Número de Habitación", "Tipo de Habitación	", "Características", "Precio", "Estado"};

        String cabeTableServicios[] = {"ID", "Servicio", "precio"};

        modTablaHabitacionesRecervas.setColumnIdentifiers(cabeTableHabitaciones);
        tablaHabitacionesRecervas.setModel(modTablaHabitacionesRecervas);

        modTablaServicios.setColumnIdentifiers(cabeTableServicios);
        tablaServicios.setModel(modTablaServicios);

        modTablaServiciosElegido.setColumnIdentifiers(cabeTableServicios);
        tablaServiciosElegido.setModel(modTablaServiciosElegido);
        modTablaServiciosElegido.addTableModelListener(e -> calcularPrecioTotal());
        busquedaDinamica();
        tablaHabitacionesRecervas.setBackground(Color.BLACK);
        tablaHabitacionesRecervas.setForeground(Color.WHITE);
        fechaLlegadaRes.setDate(new Date());
        fechaLlegadaRes.getDateEditor().addPropertyChangeListener("date", evt -> validarFechas());
        fechaSalidaRes.getDateEditor().addPropertyChangeListener("date", evt -> validarFechas());

        Panel_Reserva.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinField1 = new com.toedter.components.JSpinField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        Panel_Reserva = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtApellidoClienteRes = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtCelularClienteRes = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtCorreoClienteRes = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtNumHabitacionClienteRes = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtPrecioTotalRes = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtDniClienteRes = new javax.swing.JTextField();
        btnAgregarService = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        txtNombreClienteRes = new javax.swing.JTextField();
        btnAceptarGuardarRes = new javax.swing.JButton();
        btnCancelarRes = new javax.swing.JButton();
        fechaLlegadaRes = new com.toedter.calendar.JDateChooser();
        fechaSalidaRes = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        cboxTipoPago = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaServiciosElegido = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaServicios = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnbuscarDni = new javax.swing.JButton();
        btnEliminarService = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtPrecioHabitacionRes = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtPagoRes = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtVuelto = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jpanelContenidoHabi = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHabitacionesRecervas = new javax.swing.JTable();
        txtBuscarHabitaciones = new javax.swing.JTextField();
        btnBuscarHabitacion = new javax.swing.JButton();
        btnRecervar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel_Reserva.setBackground(new java.awt.Color(255, 255, 255));
        Panel_Reserva.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Panel_Reserva.setForeground(new java.awt.Color(0, 0, 0));
        Panel_Reserva.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Panel_Reserva.setEnabled(false);
        Panel_Reserva.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText(" Recerva");
        Panel_Reserva.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, 30));

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("DNI");
        Panel_Reserva.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 40, -1));

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Apellido");
        Panel_Reserva.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 60, -1));

        txtApellidoClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtApellidoClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtApellidoClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtApellidoClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtApellidoClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtApellidoClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 150, 30));

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Celular");
        Panel_Reserva.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 100, -1));

        txtCelularClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtCelularClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtCelularClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtCelularClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCelularClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtCelularClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 150, 30));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Correo Electronico");
        Panel_Reserva.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 150, -1));

        txtCorreoClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtCorreoClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtCorreoClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreoClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCorreoClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtCorreoClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 150, 30));

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText(" Numero Habitación");
        Panel_Reserva.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 140, -1));

        txtNumHabitacionClienteRes.setEditable(false);
        txtNumHabitacionClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtNumHabitacionClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtNumHabitacionClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtNumHabitacionClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNumHabitacionClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNumHabitacionClienteRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumHabitacionClienteResjTxtTipoHbi2ActionPerformed(evt);
            }
        });
        Panel_Reserva.add(txtNumHabitacionClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 150, 30));

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Fecha de llegada");
        Panel_Reserva.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 130, -1));

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Fecha de salida");
        Panel_Reserva.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 110, -1));

        txtPrecioTotalRes.setEditable(false);
        txtPrecioTotalRes.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecioTotalRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtPrecioTotalRes.setForeground(new java.awt.Color(0, 0, 0));
        txtPrecioTotalRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPrecioTotalRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPrecioTotalRes.setEnabled(false);
        txtPrecioTotalRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioTotalResActionPerformed(evt);
            }
        });
        Panel_Reserva.add(txtPrecioTotalRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 460, 150, 30));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Precio  a pagar");
        Panel_Reserva.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 110, -1));

        txtDniClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtDniClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtDniClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtDniClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDniClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtDniClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 150, 20));

        btnAgregarService.setBackground(new java.awt.Color(0, 0, 0));
        btnAgregarService.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        btnAgregarService.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarService.setText("Agregar");
        btnAgregarService.setBorder(null);
        btnAgregarService.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarService.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarServiceMouseClicked(evt);
            }
        });
        btnAgregarService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarServicejBBuscarActionPerformed(evt);
            }
        });
        Panel_Reserva.add(btnAgregarService, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, 80, 20));

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Nombres");
        Panel_Reserva.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 70, -1));

        txtNombreClienteRes.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreClienteRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtNombreClienteRes.setForeground(new java.awt.Color(0, 0, 0));
        txtNombreClienteRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNombreClienteRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtNombreClienteRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 150, 30));

        btnAceptarGuardarRes.setBackground(new java.awt.Color(0, 255, 0));
        btnAceptarGuardarRes.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAceptarGuardarRes.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptarGuardarRes.setText("RECERVAR");
        btnAceptarGuardarRes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptarGuardarRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarGuardarResActionPerformed(evt);
            }
        });
        Panel_Reserva.add(btnAceptarGuardarRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 500, 230, 30));

        btnCancelarRes.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelarRes.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnCancelarRes.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarRes.setText("CANCELAR");
        btnCancelarRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarResActionPerformed(evt);
            }
        });
        Panel_Reserva.add(btnCancelarRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 230, 30));

        fechaLlegadaRes.setBackground(new java.awt.Color(255, 255, 255));
        fechaLlegadaRes.setForeground(new java.awt.Color(0, 0, 0));
        fechaLlegadaRes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fechaLlegadaResFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fechaLlegadaResFocusLost(evt);
            }
        });
        Panel_Reserva.add(fechaLlegadaRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 150, 30));

        fechaSalidaRes.setBackground(new java.awt.Color(255, 255, 255));
        fechaSalidaRes.setForeground(new java.awt.Color(0, 0, 0));
        fechaSalidaRes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fechaSalidaResFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fechaSalidaResFocusLost(evt);
            }
        });
        Panel_Reserva.add(fechaSalidaRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 150, 30));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Tipo Pago");
        Panel_Reserva.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 90, 20));

        cboxTipoPago.setBackground(new java.awt.Color(255, 255, 255));
        cboxTipoPago.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxTipoPago.setForeground(new java.awt.Color(0, 0, 0));
        cboxTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Tarjeta de Crédito", "Transferencia Bancaria", "Efectivo" }));
        cboxTipoPago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboxTipoPagoFocusLost(evt);
            }
        });
        cboxTipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTipoPagoActionPerformed(evt);
            }
        });
        Panel_Reserva.add(cboxTipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 150, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Servicios Selecionado");
        Panel_Reserva.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 180, 20));

        tablaServiciosElegido.setBackground(new java.awt.Color(255, 255, 255));
        tablaServiciosElegido.setForeground(new java.awt.Color(0, 0, 0));
        tablaServiciosElegido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tablaServiciosElegido);

        Panel_Reserva.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 190, 90));

        tablaServicios.setBackground(new java.awt.Color(255, 255, 255));
        tablaServicios.setForeground(new java.awt.Color(0, 0, 0));
        tablaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(tablaServicios);

        Panel_Reserva.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 190, 90));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Servicios");
        Panel_Reserva.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 70, 20));

        btnbuscarDni.setBackground(new java.awt.Color(0, 0, 0));
        btnbuscarDni.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        btnbuscarDni.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscarDni.setText("Buscar");
        btnbuscarDni.setBorder(null);
        btnbuscarDni.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbuscarDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarDnijBBuscarActionPerformed(evt);
            }
        });
        Panel_Reserva.add(btnbuscarDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 80, 20));

        btnEliminarService.setBackground(new java.awt.Color(0, 0, 0));
        btnEliminarService.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        btnEliminarService.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarService.setText("Eliminar");
        btnEliminarService.setBorder(null);
        btnEliminarService.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarService.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarServiceMouseClicked(evt);
            }
        });
        btnEliminarService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarServicejBBuscarActionPerformed(evt);
            }
        });
        Panel_Reserva.add(btnEliminarService, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, 80, 20));

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Precio Habitacion");
        Panel_Reserva.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 150, -1));

        txtPrecioHabitacionRes.setEditable(false);
        txtPrecioHabitacionRes.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecioHabitacionRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtPrecioHabitacionRes.setForeground(new java.awt.Color(0, 0, 0));
        txtPrecioHabitacionRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPrecioHabitacionRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Panel_Reserva.add(txtPrecioHabitacionRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 150, 30));

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Proceso de pago");
        Panel_Reserva.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 310, 30));

        txtPagoRes.setBackground(new java.awt.Color(255, 255, 255));
        txtPagoRes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtPagoRes.setForeground(new java.awt.Color(0, 0, 0));
        txtPagoRes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPagoRes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPagoRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPagoResActionPerformed(evt);
            }
        });
        Panel_Reserva.add(txtPagoRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, 150, 30));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Vuelto");
        Panel_Reserva.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, 140, -1));

        txtVuelto.setBackground(new java.awt.Color(255, 255, 255));
        txtVuelto.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtVuelto.setForeground(new java.awt.Color(0, 0, 0));
        txtVuelto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtVuelto.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtVuelto.setEnabled(false);
        Panel_Reserva.add(txtVuelto, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, 150, 30));

        jLabel38.setBackground(new java.awt.Color(255, 255, 255));
        jLabel38.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Ingrese monto");
        Panel_Reserva.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 140, -1));
        Panel_Reserva.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 690, 10));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("(*)");
        Panel_Reserva.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, -1, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("(*)");
        Panel_Reserva.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("(*)");
        Panel_Reserva.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, -1, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("(*)");
        Panel_Reserva.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("(*)");
        Panel_Reserva.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, -1, 30));

        add(Panel_Reserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 690, 540));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel1.setText("Gestión de Recervas");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jpanelContenidoHabi.setBackground(new java.awt.Color(255, 255, 255));
        jpanelContenidoHabi.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jpanelContenidoHabi.setForeground(new java.awt.Color(0, 0, 0));
        jpanelContenidoHabi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Lista de Habitaciones");
        jpanelContenidoHabi.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 310, 48));

        tablaHabitacionesRecervas.setBackground(new java.awt.Color(180, 180, 180));
        tablaHabitacionesRecervas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        tablaHabitacionesRecervas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tablaHabitacionesRecervas.setForeground(new java.awt.Color(0, 0, 0));
        tablaHabitacionesRecervas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaHabitacionesRecervas.setGridColor(new java.awt.Color(180, 180, 180));
        jScrollPane1.setViewportView(tablaHabitacionesRecervas);

        jpanelContenidoHabi.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 760, 190));

        txtBuscarHabitaciones.setBackground(new java.awt.Color(180, 180, 180));
        txtBuscarHabitaciones.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBuscarHabitaciones.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscarHabitaciones.setText("Buscar Habitacion");
        txtBuscarHabitaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarHabitacionesFocusLost(evt);
            }
        });
        txtBuscarHabitaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarHabitacionesMouseClicked(evt);
            }
        });
        txtBuscarHabitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarHabitacionesActionPerformed(evt);
            }
        });
        jpanelContenidoHabi.add(txtBuscarHabitaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 276, 32));

        btnBuscarHabitacion.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscarHabitacion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBuscarHabitacion.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarHabitacion.setText("Buscar");
        btnBuscarHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarHabitacionActionPerformed(evt);
            }
        });
        jpanelContenidoHabi.add(btnBuscarHabitacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 86, 35));

        btnRecervar.setBackground(new java.awt.Color(0, 0, 0));
        btnRecervar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRecervar.setForeground(new java.awt.Color(255, 255, 255));
        btnRecervar.setText("Recervar");
        btnRecervar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecervarActionPerformed(evt);
            }
        });
        jpanelContenidoHabi.add(btnRecervar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 120, 120, 40));

        add(jpanelContenidoHabi, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 850, 390));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarServicejBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarServicejBBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarServicejBBuscarActionPerformed

    private void txtNumHabitacionClienteResjTxtTipoHbi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumHabitacionClienteResjTxtTipoHbi2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumHabitacionClienteResjTxtTipoHbi2ActionPerformed

    private void btnAceptarGuardarResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarGuardarResActionPerformed

        if (validarFechas() && validarCamposRequeridos()) {
            Panel_Reserva.setVisible(false);
            btnRecervar.setVisible(true);
            desbloquear(jpanelContenidoHabi);
        } else {

        }
        //creamos una arreglo de tipos object
        //Object fila[] = new Object[7];
        // ArrayList<String> list = new ArrayList<>();
        //obtenemos los datos que agrega el usuario
        // String tDni = txtDni.getText();
        //String tNombre = txtNombre.getText();
        //String tApellido = txtApellido.getText();
        //  String puesto = (String) cboxPuesto.getSelectedItem();
        //  String tSalario = txtSalario.getText();
        //  String tTelefno = txtTelefono.getText();
        // list.add(tDni); //0
        // list.add(tNombre); //1
        // list.add(tApellido); //2
        //falta fecha de contratacion
        // list.add(puesto); //3
        //  list.add(tSalario);//4
        // list.add(tTelefno);//5
        //  administrador.registrarEmpleado(modTablaEmpleados, list);

        /*
        String tPuesto = String.valueOf(cboxPuesto.getSelectedItem());
        //
        Empleado empledo1 = new Mozo(tDni, tPuesto, 200, tNombre, tApellido, "", tTelefno, "");
        //        administrador.registrarEmpleado(empledo1);
        //"DNI","NOMBRE","APELLIDO","TELEFONO" ,"PUESTO","FECHA INGRESO","SALARIO"
        //agregamos cada ctenido al arreglo
        fila[0] = empledo1.getDni();
        fila[1] = empledo1.getNombre();
        fila[2] = empledo1.getApellido();
        fila[3] = empledo1.getCelular();
        fila[4] = empledo1.getPuesto();
        fila[5] = "200";
        fila[6] = empledo1.getSalario();
        //agregamos una fila  a la tabla con el contedio que tiene el arreglo
        modTablaEmpleados.addRow(fila);
         */
    }//GEN-LAST:event_btnAceptarGuardarResActionPerformed

    private void btnCancelarResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarResActionPerformed
        Panel_Reserva.setVisible(false);
        btnRecervar.setVisible(true);
        desbloquear(jpanelContenidoHabi);
    }//GEN-LAST:event_btnCancelarResActionPerformed

    private void txtBuscarHabitacionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarHabitacionesFocusLost
        if (txtBuscarHabitaciones.getText().isEmpty()) {
            txtBuscarHabitaciones.setText("Buscar Habitacion");
        }
    }//GEN-LAST:event_txtBuscarHabitacionesFocusLost

    private void txtBuscarHabitacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarHabitacionesMouseClicked
        if (txtBuscarHabitaciones.getText().equals("Buscar Habitacion")) {
            txtBuscarHabitaciones.setText("");
        }

    }//GEN-LAST:event_txtBuscarHabitacionesMouseClicked

    private void txtBuscarHabitacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarHabitacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarHabitacionesActionPerformed

    private void btnBuscarHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarHabitacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarHabitacionActionPerformed

    private void btnRecervarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecervarActionPerformed

        int fila = tablaHabitacionesRecervas.getSelectedRow();

        if (fila == -1) {

            JOptionPane.showConfirmDialog(null, "SELECCIONA UN HABITACION   ", "", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);

        } else {
            String estadoHabitacion = String.valueOf(tablaHabitacionesRecervas.getValueAt(fila, 5));

            if (!estadoHabitacion.equals("OCUPADA")) {
                // bloquearImputs();
                bloquear(jpanelContenidoHabi);
                //  background.setVisible(true);
                Panel_Reserva.setVisible(true);
                btnRecervar.setVisible(false);
                modTablaServiciosElegido.setRowCount(0);

                llenarFormEditar();

                return;
            }

            JOptionPane.showConfirmDialog(null, "HABITACION YA OCUPADA", "", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnRecervarActionPerformed

    private void cboxTipoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTipoPagoActionPerformed

        int indiceSeleccionado = cboxTipoPago.getSelectedIndex();

        // Asegurarse de que el índice seleccionado es válido
        if (indiceSeleccionado != -1) {
            // Si no es el cuarto elemento, desabilitar el campo
            if (indiceSeleccionado != 3) {
                txtPagoRes.setEnabled(false);
            } else {
                txtPagoRes.setEnabled(true); // habilitar si es el cuarto elemento
            }
        } else {
            System.out.println("No hay un elemento seleccionado.");
        }


    }//GEN-LAST:event_cboxTipoPagoActionPerformed

    private void btnbuscarDnijBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarDnijBBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbuscarDnijBBuscarActionPerformed

    private void btnAgregarServiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarServiceMouseClicked
        int fila = tablaServicios.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showConfirmDialog(null, "SELECCIONA UNA CELDA", "", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
        } else {
            String idServicio = String.valueOf(tablaServicios.getValueAt(fila, 0));
            String servicioName = String.valueOf(tablaServicios.getValueAt(fila, 1));
            String servicioPrecio = String.valueOf(tablaServicios.getValueAt(fila, 2));

            boolean existe = false;
            for (int i = 0; i < modTablaServiciosElegido.getRowCount(); i++) {
                if (modTablaServiciosElegido.getValueAt(i, 0).equals(idServicio)) {
                    existe = true;
                    break;
                }
            }

            if (!existe) {
                // Si no existe, lo añadimos
                Object[] filas = new Object[3];
                filas[0] = idServicio;
                filas[1] = servicioName;
                filas[2] = servicioPrecio;

                modTablaServiciosElegido.addRow(filas);
            } else {
                JOptionPane.showMessageDialog(null, "El servicio ya ha sido seleccionado", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAgregarServiceMouseClicked

    private void btnEliminarServiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarServiceMouseClicked
        int filaSeleccionada = tablaServiciosElegido.getSelectedRow(); // Obtener la fila seleccionada

        if (filaSeleccionada != -1) {
            String idServicio = String.valueOf(modTablaServiciosElegido.getValueAt(filaSeleccionada, 0)); // Obtener el ID del servicio
            boolean encontrado = false;

            // Verificar que la tabla tenga filas antes de intentar acceder a ellas
            if (modTablaServiciosElegido.getRowCount() > 0) {
                // Recorrer el modelo de la tabla para encontrar la fila con el idServicio
                for (int i = 0; i < modTablaServiciosElegido.getRowCount(); i++) {
                    String idEnTabla = String.valueOf(modTablaServiciosElegido.getValueAt(i, 0)); // Obtener el ID en la fila actual

                    if (idEnTabla.equals(idServicio)) {
                        modTablaServiciosElegido.removeRow(i); // Eliminar la fila cuando coincida
                        JOptionPane.showMessageDialog(null, "Servicio eliminado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                        encontrado = true;
                        break; // Salir del bucle una vez que se encuentre y elimine la fila
                    }
                }

                if (!encontrado) {
                    JOptionPane.showMessageDialog(null, "No se encontró el servicio seleccionado en la tabla elegida", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "La tabla de servicios elegidos está vacía", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, selecciona una fila válida para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarServiceMouseClicked

    private void btnEliminarServicejBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarServicejBBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarServicejBBuscarActionPerformed

    private void txtPagoResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPagoResActionPerformed

        calcularVuelto();


    }//GEN-LAST:event_txtPagoResActionPerformed

    private void txtPrecioTotalResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioTotalResActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioTotalResActionPerformed

    private void fechaLlegadaResFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaLlegadaResFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaLlegadaResFocusGained

    private void fechaSalidaResFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaSalidaResFocusGained

    }//GEN-LAST:event_fechaSalidaResFocusGained

    private void fechaSalidaResFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaSalidaResFocusLost
        validarFechas();
    }//GEN-LAST:event_fechaSalidaResFocusLost

    private void fechaLlegadaResFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaLlegadaResFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaLlegadaResFocusLost

    private void cboxTipoPagoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboxTipoPagoFocusLost
        validarFechas();
    }//GEN-LAST:event_cboxTipoPagoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Panel_Reserva;
    public javax.swing.JButton btnAceptarGuardarRes;
    private javax.swing.JButton btnAgregarService;
    public javax.swing.JButton btnBuscarHabitacion;
    public javax.swing.JButton btnCancelarRes;
    private javax.swing.JButton btnEliminarService;
    public javax.swing.JButton btnRecervar;
    public javax.swing.JButton btnbuscarDni;
    public javax.swing.JComboBox<String> cboxTipoPago;
    private com.toedter.calendar.JDateChooser fechaLlegadaRes;
    private com.toedter.calendar.JDateChooser fechaSalidaRes;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.components.JSpinField jSpinField1;
    private javax.swing.JPanel jpanelContenidoHabi;
    public javax.swing.JTable tablaHabitacionesRecervas;
    private javax.swing.JTable tablaServicios;
    private javax.swing.JTable tablaServiciosElegido;
    public javax.swing.JTextField txtApellidoClienteRes;
    private javax.swing.JTextField txtBuscarHabitaciones;
    public javax.swing.JTextField txtCelularClienteRes;
    public javax.swing.JTextField txtCorreoClienteRes;
    public javax.swing.JTextField txtDniClienteRes;
    public javax.swing.JTextField txtNombreClienteRes;
    public javax.swing.JTextField txtNumHabitacionClienteRes;
    private javax.swing.JTextField txtPagoRes;
    public javax.swing.JTextField txtPrecioHabitacionRes;
    public javax.swing.JTextField txtPrecioTotalRes;
    private javax.swing.JTextField txtVuelto;
    // End of variables declaration//GEN-END:variables

    public void bloquear(Component component) {

        if (component instanceof Container) {
            Component[] components = ((Container) component).getComponents();
            for (Component child : components) {
                bloquear(child); // Llamada recursiva
            }
        }
        component.setEnabled(false);

    }

    public void desbloquear(Component component) {

        if (component instanceof Container) {
            Component[] components = ((Container) component).getComponents();
            for (Component child : components) {
                desbloquear(child); // Llamada recursiva
            }
        }
        component.setEnabled(true);

    }

    private void llenarFormEditar() {

        int fila = tablaHabitacionesRecervas.getSelectedRow();

        String idHabitacion = String.valueOf(tablaHabitacionesRecervas.getValueAt(fila, 0));
        String numeroHabitacion = String.valueOf(tablaHabitacionesRecervas.getValueAt(fila, 1));
        String precioHabitacion = String.valueOf(tablaHabitacionesRecervas.getValueAt(fila, 4));

        txtNumHabitacionClienteRes.setText(numeroHabitacion);
        txtPrecioHabitacionRes.setText(precioHabitacion);
    }

    private void calcularPrecioTotal() {

        double precioHabitacion = Double.parseDouble(txtPrecioHabitacionRes.getText());

        double totalReserva = precioHabitacion;

        for (int i = 0; i < modTablaServiciosElegido.getRowCount(); i++) {

            double precioServicio = Double.parseDouble((String) modTablaServiciosElegido.getValueAt(i, 2));

            totalReserva += precioServicio;

        }

        txtPrecioTotalRes.setText("" + totalReserva);
        System.out.println(totalReserva);
    }

    public Reserva getDatosReserva() {
        Reserva reserva = new Reserva();

        Cliente cliente = new Cliente();
        cliente.setDni(txtDniClienteRes.getText());
        cliente.setNombre(txtNombreClienteRes.getText());
        cliente.setApellido(txtApellidoClienteRes.getText());
        cliente.setCelular(txtCelularClienteRes.getText());
        cliente.setCorreoElectronico(txtCorreoClienteRes.getText());
        reserva.setCliente(cliente);

        Habitacion habitacion = new Habitacion();
        habitacion.setNumeroDeHabitacion(txtNumHabitacionClienteRes.getText());
        reserva.setHabitacion(habitacion);
        //fehca llegada
        Date selectedDateLLegada = fechaLlegadaRes.getDate();
        Timestamp timestampLLeg = new Timestamp(selectedDateLLegada.getTime());
        //fecha fin
        Date selectedDateFin = fechaSalidaRes.getDate();

        Timestamp timestampFin = new Timestamp(selectedDateFin.getTime());

        reserva.setFechaLLegada(timestampLLeg);
        reserva.setFechaFin(timestampFin);

        reserva.setMontoTotal(Double.valueOf(txtPrecioTotalRes.getText()));

        return reserva;

    }

    public List<Servicio> getServiciosReserva() {
        List<Servicio> listServices = new ArrayList<>();

        for (int i = 0; i < modTablaServiciosElegido.getRowCount(); i++) {
            String idEnTabla = String.valueOf(modTablaServiciosElegido.getValueAt(i, 0)); // Obtener el ID en la fila actual
            String servicioName = String.valueOf(modTablaServiciosElegido.getValueAt(i, 1));

            // Crear una nueva instancia de Servicio para cada fila
            Servicio serv = new Servicio();
            serv.setIdServicios(Long.valueOf(idEnTabla));
            serv.setNombreServicio(servicioName);

            // Agregar el nuevo objeto Servicio a la lista
            listServices.add(serv);
        }

        return listServices;
    }

    public void busquedaDinamica() {
        // Crear un TableRowSorter para el modelo de la tabla
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modTablaHabitacionesRecervas);
        tablaHabitacionesRecervas.setRowSorter(sorter);

        // Añadir un KeyListener al campo de búsqueda
        txtBuscarHabitaciones.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String textoBusqueda = txtBuscarHabitaciones.getText().trim();

                // Si el campo de búsqueda está vacío, mostrar todas las filas
                if (textoBusqueda.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    // Aplicar un filtro en la tabla según el texto ingresado
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
                }
            }
        });

    }

    public void calcularVuelto() {
        try {
            // Validar que los campos no estén vacíos
            if (txtPagoRes.getText().trim().isEmpty() || txtPrecioTotalRes.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, completa ambos campos antes de calcular el vuelto.");
                return;
            }

            // Intentar convertir los valores ingresados a números
            double pago = Double.parseDouble(txtPagoRes.getText().trim());
            double precioTotal = Double.parseDouble(txtPrecioTotalRes.getText().trim());

            // Validar que los valores sean positivos
            if (pago < 0 || precioTotal < 0) {
                JOptionPane.showMessageDialog(null, "Por favor, ingresa valores positivos.");
                txtPagoRes.setText("");
                return;
            }

            // Validar que el pago sea suficiente
            if (pago < precioTotal) {
                JOptionPane.showMessageDialog(null, "El pago no es suficiente para cubrir el total.");
                txtPagoRes.setText("");
                return;
            }

            // Calcular el vuelto
            double vuelto = pago - precioTotal;

            // Formatear el resultado a dos decimales
            DecimalFormat df = new DecimalFormat("#.00");
            txtVuelto.setText(df.format(vuelto));
        } catch (NumberFormatException e) {
            // Manejar casos en los que los valores ingresados no sean numéricos
            JOptionPane.showMessageDialog(null, "Por favor, ingresa valores numéricos válidos.");
        }
    }

    public boolean validarFechas() {

        // Obtener las fechas seleccionadas
        Date llegada = fechaLlegadaRes.getDate();
        Date fin = fechaSalidaRes.getDate();
        Date fechaActual = new Date(); // Fecha actual

        if (llegada == null || fin == null) {

            return false;
        }

        // Convertir las fechas a LocalDate para eliminar el componente de hora
        LocalDate fechaLlegada = llegada.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaFin = fin.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaHoy = fechaActual.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        // Validar que la fecha de llegada sea igual o posterior a la fecha actual
        if (fechaLlegada.isBefore(fechaHoy)) {
            JOptionPane.showMessageDialog(null, "La fecha de llegada debe ser igual o posterior a la fecha actual.");
            return false;
        }

        // Validar que la fecha de fin sea posterior a la fecha de llegada
        if (!fechaFin.isAfter(fechaLlegada)) {
            JOptionPane.showMessageDialog(null, "La fecha de fin debe ser posterior a la fecha de llegada.");
            return false;
        }

        return true;
    }

    public boolean validarCamposRequeridos() {

        if (txtDniClienteRes.getText().isEmpty() || txtNombreClienteRes.getText().isEmpty() || txtApellidoClienteRes.getText().isEmpty()) {

            return false;

        }

        return true;

    }

}
